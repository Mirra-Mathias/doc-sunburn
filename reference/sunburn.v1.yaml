openapi: 3.0.0
info:
  title: sunburn
  version: '1.0'
  contact:
    name: Equipe SI MCGR
    email: helpdesk@mcgr.fr
    url: helpdesk@mcgr.fr
  description: ''
servers:
  - url: 'http://217.182.175.55:8083'
paths:
  /apiV0/login:
    parameters: []
    post:
      summary: Connexion
      operationId: post-apiV0-login
      responses:
        '200':
          description: Retourne le token et l'uitlisateur
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - password
                      - email
                      - etat
                      - created
                      - updatedAt
                      - id_user_type
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                        minLength: 1
                      password:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                      etat:
                        type: string
                        minLength: 1
                      created:
                        type: string
                        minLength: 1
                      updatedAt:
                        type: string
                        minLength: 1
                      id_user_type:
                        type: number
                required:
                  - message
                  - data
              examples:
                Example:
                  value:
                    message: string
                    data:
                      id: 0
                      name: string
                      password: string
                      email: string
                      etat: string
                      created: string
                      updatedAt: string
                      id_user_type: 0
        '404':
          description: Utilisateur non existant
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      description: Connexion Utilisateur
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                user_name:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - user_name
                - password
            examples:
              Example:
                value:
                  user_name: string
                  password: string
        description: ''
  /apiV0/findAllClients:
    get:
      summary: Find all clients
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                          minLength: 1
                        codeDepartement:
                          type: number
                        created:
                          type: string
                          minLength: 1
                        updatedAt:
                          type: string
                          minLength: 1
                      required:
                        - id
                        - name
                        - codeDepartement
                        - created
                        - updatedAt
                required:
                  - message
                  - data
              examples:
                Example:
                  value:
                    message: La liste des clients a bien été récupérée.
                    data:
                      - id: 1
                        name: F31
                        codeDepartement: 31100
                        created: '2021-01-20T19:37:03.000Z'
                        updatedAt: '2021-01-20T19:37:03.000Z'
                      - id: 2
                        name: SPIE
                        codeDepartement: 31100
                        created: '2021-01-20T19:37:03.000Z'
                        updatedAt: '2021-01-20T19:37:03.000Z'
                      - id: 3
                        name: ETE
                        codeDepartement: 31100
                        created: '2021-01-20T19:37:03.000Z'
                        updatedAt: '2021-01-20T19:37:03.000Z'
                      - id: 4
                        name: SOTRANASA
                        codeDepartement: 31100
                        created: '2021-01-20T19:37:03.000Z'
                        updatedAt: '2021-01-20T19:37:03.000Z'
                      - id: 5
                        name: PIXL
                        codeDepartement: 31100
                        created: '2021-01-20T19:37:03.000Z'
                        updatedAt: '2021-01-20T19:37:03.000Z'
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      operationId: get-apiV0-findAllClients
      description: findAllClients
      parameters: []
  '/apiV0/findProjetsByClient/{id}':
    get:
      summary: Find all projets by client
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - id_element
                        - id_responsable
                        - id_client
                      properties:
                        id:
                          type: number
                        id_element:
                          type: number
                        id_responsable:
                          type: number
                        id_client:
                          type: number
                required:
                  - message
                  - data
              examples:
                Example:
                  value:
                    message: La liste des projets a bien été récupérée.
                    data:
                      - id: 1
                        id_element: 1
                        id_responsable: 1
                        id_client: 1
                      - id: 2
                        id_element: 134
                        id_responsable: 3
                        id_client: 1
                      - id: 3
                        id_element: 267
                        id_responsable: 3
                        id_client: 1
                      - id: 4
                        id_element: 400
                        id_responsable: 3
                        id_client: 1
                      - id: 6
                        id_element: 666
                        id_responsable: 3
                        id_client: 1
                      - id: 7
                        id_element: 799
                        id_responsable: 3
                        id_client: 1
                      - id: 8
                        id_element: 932
                        id_responsable: 7
                        id_client: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
          headers: {}
      operationId: 'get-apiV0-findProjetsByClient-:id'
      description: findAllprojetsByClient
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/findZonesByProjet/{id}':
    get:
      summary: Find Zone by projet
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - createdAt
                        - updatedAt
                        - id_element
                        - id_projet
                      properties:
                        id:
                          type: number
                        createdAt:
                          type: string
                          minLength: 1
                        updatedAt:
                          type: string
                          minLength: 1
                        id_element:
                          type: number
                        id_projet:
                          type: number
                required:
                  - message
                  - data
              examples:
                Example:
                  value:
                    message: La liste des zones à bien était récupérer
                    data:
                      - id: 1
                        createdAt: '2021-01-22T10:49:53.000Z'
                        updatedAt: '2021-01-22T10:49:53.000Z'
                        id_element: 2
                        id_projet: 1
                      - id: 2
                        createdAt: '2021-01-22T10:49:53.000Z'
                        updatedAt: '2021-01-22T10:49:53.000Z'
                        id_element: 3
                        id_projet: 1
                      - id: 3
                        createdAt: '2021-01-22T10:49:53.000Z'
                        updatedAt: '2021-01-22T10:49:53.000Z'
                        id_element: 5
                        id_projet: 1
                      - id: 4
                        createdAt: '2021-01-22T10:49:53.000Z'
                        updatedAt: '2021-01-22T10:49:53.000Z'
                        id_element: 4
                        id_projet: 1
                      - id: 5
                        createdAt: '2021-01-22T10:49:53.000Z'
                        updatedAt: '2021-01-22T10:49:53.000Z'
                        id_element: 6
                        id_projet: 1
                      - id: 6
                        createdAt: '2021-01-22T10:49:54.000Z'
                        updatedAt: '2021-01-22T10:49:54.000Z'
                        id_element: 7
                        id_projet: 1
                      - id: 7
                        createdAt: '2021-01-22T10:49:54.000Z'
                        updatedAt: '2021-01-22T10:49:54.000Z'
                        id_element: 8
                        id_projet: 1
                      - id: 8
                        createdAt: '2021-01-22T10:49:54.000Z'
                        updatedAt: '2021-01-22T10:49:54.000Z'
                        id_element: 9
                        id_projet: 1
                      - id: 9
                        createdAt: '2021-01-22T10:49:54.000Z'
                        updatedAt: '2021-01-22T10:49:54.000Z'
                        id_element: 10
                        id_projet: 1
                      - id: 10
                        createdAt: '2021-01-22T10:49:54.000Z'
                        updatedAt: '2021-01-22T10:49:54.000Z'
                        id_element: 11
                        id_projet: 1
                      - id: 11
                        createdAt: '2021-01-22T10:49:54.000Z'
                        updatedAt: '2021-01-22T10:49:54.000Z'
                        id_element: 12
                        id_projet: 1
                      - id: 12
                        createdAt: '2021-01-22T10:49:54.000Z'
                        updatedAt: '2021-01-22T10:49:54.000Z'
                        id_element: 13
                        id_projet: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Example:
                  value:
                    message: string
      operationId: get-apiV0-findZoneByProjet
      description: findAllZonesByProjet
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/findModulesByZone/{id}':
    get:
      summary: Find modules by zone
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        id_element:
                          type: number
                        id_zone:
                          type: number
                      required:
                        - id
                        - id_element
                        - id_zone
                required:
                  - message
                  - data
              examples:
                Example:
                  value:
                    message: La liste des modules à bien était récupérer
                    data:
                      - id: 1
                        id_element: 14
                        id_zone: 2
                      - id: 2
                        id_element: 15
                        id_zone: 2
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                  '':
                    type: string
      operationId: get-apiV0-findModuleByZone
      description: findModulesByZone
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/findTachesByModule/{id}':
    get:
      summary: Find taches by module
      tags: []
      responses: {}
      operationId: get-apiV0-findTachesByModule
      description: findTaches
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/findStepsByTache/{id}':
    get:
      summary: Find steps by tache
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - id_element
                        - id_tache
                      properties:
                        id:
                          type: number
                        id_element:
                          type: number
                        id_tache:
                          type: number
                required:
                  - message
                  - data
              examples:
                Example:
                  value:
                    message: La liste des modules a bien été récupérée.
                    data:
                      - id: 1
                        id_element: 98
                        id_tache: 38
                      - id: 2
                        id_element: 99
                        id_tache: 38
                      - id: 3
                        id_element: 100
                        id_tache: 38
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      operationId: get-apiV0-findStepsByTaches
      description: findStepsByTache
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/affectationElements/:
    get:
      summary: Affectation elements
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Exemple:
                  value:
                    message: L'affectation sur le projet est terminée.
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      operationId: get-apiV0-affectationElements
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                id:
                  type: number
                type_element:
                  type: string
                  minLength: 1
                id_affectation:
                  type: number
              required:
                - id
                - type_element
                - id_affectation
            examples:
              Exemple projet:
                value:
                  id: 1
                  type_element: projet
                  id_affectation: 1
              Exemple zone:
                value:
                  id: 0
                  type_element: string
                  id_affectation: 0
              Exemple module:
                value:
                  id: 0
                  type_element: string
                  id_affectation: 0
              Exemple tache:
                value:
                  id: 0
                  type_element: string
                  id_affectation: 0
              Exemple step:
                value:
                  id: 0
                  type_element: string
                  id_affectation: 0
      description: affectationElements
  '/apiV0/findUserAffecteByElements/{id}':
    get:
      summary: Find user affecte by elements
      tags: []
      responses: {}
      operationId: get-apiV0-findUserAffecteByElements
      description: ''
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/createClient:
    post:
      summary: Create projet
      operationId: post-apiV0-createClient
      responses:
        '200':
          description: OK
      deprecated: true
  '/apiV0/deleteClient/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: delete Client
      operationId: delete-apiV0-deleteClient-id
      responses:
        '200':
          description: OK
      deprecated: true
  '/apiV0/findClientsByPk/{id}':
    get:
      summary: find Clients by pk
      tags: []
      responses: {}
      operationId: get-apiV0-findClientsByPk
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/download/{id}':
    get:
      summary: download
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/zip:
              schema:
                type: object
                properties: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      operationId: get-apiV0-download
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apV0/createTache:
    get:
      summary: Create tache
      tags: []
      responses: {}
      operationId: get-apV0-createTache
      deprecated: true
  '/apiV0/findAllElementsByUser/{id}':
    get:
      summary: Find all elements by user
      tags: []
      responses: {}
      operationId: get-apiV0-findAllElementsByUser
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/findElementsByPk:
    get:
      summary: Find elements by pk
      tags: []
      responses: {}
      operationId: get-apiV0-findElementsByPk
      deprecated: true
  /apiv0/updateElementByStateId/:
    put:
      summary: Update element by state id
      operationId: put-apiv0-updateElementByStateId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    items:
                      required: []
                      properties: {}
                required:
                  - message
                  - data
      deprecated: true
      description: ''
  '/apiV0/findFilesByElement/{id}':
    get:
      summary: Find Files by element
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - changement
                        - version
                        - etat
                        - created
                        - updatedAt
                        - id_file
                        - id_element
                      properties:
                        id:
                          type: number
                        changement:
                          type: string
                        version:
                          type: string
                          minLength: 1
                        etat:
                          type: boolean
                        created:
                          type: string
                          minLength: 1
                        updatedAt:
                          type: string
                          minLength: 1
                        id_file:
                          type: number
                        id_element:
                          type: number
                        file:
                          type: object
                          properties:
                            id:
                              type: number
                            type:
                              type: string
                              minLength: 1
                            link:
                              type: string
                              minLength: 1
                            link_source:
                              type: string
                              minLength: 1
                            nom:
                              type: string
                              minLength: 1
                            createdAt:
                              type: string
                              minLength: 1
                            updatedAt:
                              type: string
                              minLength: 1
                            id_user_upload:
                              type: number
                          required:
                            - id
                            - type
                            - link
                            - link_source
                            - nom
                            - createdAt
                            - updatedAt
                            - id_user_upload
                required:
                  - message
                  - data
              examples:
                Exemple:
                  value:
                    message: La liste fichiers à bien était récupérer.
                    data:
                      - id: 1
                        changement: ''
                        version: '1'
                        etat: true
                        created: '2021-01-22T10:49:54.000Z'
                        updatedAt: '2021-01-22T10:49:54.000Z'
                        id_file: 2
                        id_element: 1
                        file:
                          id: 2
                          type: projet
                          link: test
                          link_source: 2021-01
                          nom: NRO-31-300
                          createdAt: '2021-01-22T10:49:53.000Z'
                          updatedAt: '2021-01-22T10:49:53.000Z'
                          id_user_upload: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
        '':
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - changement
                        - version
                        - etat
                        - created
                        - updatedAt
                        - id_file
                        - id_element
                      properties:
                        id:
                          type: number
                        changement:
                          type: string
                        version:
                          type: string
                          minLength: 1
                        etat:
                          type: boolean
                        created:
                          type: string
                          minLength: 1
                        updatedAt:
                          type: string
                          minLength: 1
                        id_file:
                          type: number
                        id_element:
                          type: number
                        file:
                          type: object
                          properties:
                            id:
                              type: number
                            type:
                              type: string
                              minLength: 1
                            link:
                              type: string
                              minLength: 1
                            link_source:
                              type: string
                              minLength: 1
                            nom:
                              type: string
                              minLength: 1
                            createdAt:
                              type: string
                              minLength: 1
                            updatedAt:
                              type: string
                              minLength: 1
                            id_user_upload:
                              type: number
                          required:
                            - id
                            - type
                            - link
                            - link_source
                            - nom
                            - createdAt
                            - updatedAt
                            - id_user_upload
                required:
                  - message
                  - data
      operationId: get-apiV0-findFileMaxVersionByElement
      description: findFileVersionByElement
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/findFileMaxVersionByElement/{id}':
    get:
      summary: Find file max version by element
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - changement
                        - version
                        - etat
                        - created
                        - updatedAt
                        - id_file
                        - id_element
                      properties:
                        id:
                          type: number
                        changement:
                          type: string
                        version:
                          type: string
                          minLength: 1
                        etat:
                          type: boolean
                        created:
                          type: string
                          minLength: 1
                        updatedAt:
                          type: string
                          minLength: 1
                        id_file:
                          type: number
                        id_element:
                          type: number
                        file:
                          type: object
                          properties:
                            id:
                              type: number
                            type:
                              type: string
                              minLength: 1
                            link:
                              type: string
                              minLength: 1
                            link_source:
                              type: string
                              minLength: 1
                            nom:
                              type: string
                              minLength: 1
                            createdAt:
                              type: string
                              minLength: 1
                            updatedAt:
                              type: string
                              minLength: 1
                            id_user_upload:
                              type: number
                          required:
                            - id
                            - type
                            - link
                            - link_source
                            - nom
                            - createdAt
                            - updatedAt
                            - id_user_upload
                required:
                  - message
                  - data
              examples:
                Exemple:
                  value:
                    message: string
                    data:
                      - id: 0
                        changement: string
                        version: string
                        etat: true
                        created: string
                        updatedAt: string
                        id_file: 0
                        id_element: 0
                        file:
                          id: 0
                          type: string
                          link: string
                          link_source: string
                          nom: string
                          createdAt: string
                          updatedAt: string
                          id_user_upload: 0
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      operationId: get-apiV0-findFileMaxVersionByElement
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/sendMail/:
    get:
      summary: Send mail
      tags: []
      responses: {}
      operationId: get-apiV0-sendMail
      deprecated: true
  '/apiV0/deleteModule/{id}':
    get:
      summary: Delete module
      tags: []
      responses: {}
      operationId: get-apiV0-deleteModule
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/findAllModuleByPk/{id}':
    get:
      summary: find all module by pk
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-apiV0-findAllModuleByPk
      description: ''
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/findAllArchives:
    get:
      summary: find all archives
      tags: []
      responses: {}
      operationId: get-apiV0-findAllArchives
      deprecated: true
  '/apiV0/findArchivesByPk/{id}':
    get:
      summary: find archive by pk
      tags: []
      responses: {}
      operationId: get-apiV0-findArchivesByPk
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/deleteProjet/{id}':
    get:
      summary: delete projet
      tags: []
      responses: {}
      operationId: get-apiV0-deleteProjet
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/findAllProjetByPk/{id}':
    get:
      summary: find all projet by pk
      tags: []
      responses: {}
      operationId: get-apiV0-findAllProjetByPk
      description: ''
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/findAllProjets:
    get:
      summary: Find all projets
      tags: []
      responses: {}
      operationId: get-apiV0-findAllProjets
      deprecated: true
  '/apiV0/findProjetsByResponsable/{id}':
    get:
      summary: Find projets by responsable
      tags: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - nom
                        - date_debut
                        - updatedAt
                        - id_affectation
                        - id_state_type
                      properties:
                        id:
                          type: number
                        nom:
                          type: string
                          minLength: 1
                        date_debut_p: {}
                        date_fin_p: {}
                        date_fin: {}
                        date_debut:
                          type: string
                          minLength: 1
                        updatedAt:
                          type: string
                          minLength: 1
                        id_affectation:
                          type: number
                        id_type_element: {}
                        id_state_type:
                          type: number
                        projet:
                          type: object
                          properties:
                            id_responsable:
                              type: number
                            id_client: {}
                          required:
                            - id_responsable
                required:
                  - message
                  - data
              examples:
                Exemple:
                  value:
                    message: La liste des projets a bien été récupérée.
                    data:
                      - id: 1
                        nom: NRO-31-300
                        date_debut_p: null
                        date_fin_p: null
                        date_fin: null
                        date_debut: '2021-01-22T10:49:53.000Z'
                        updatedAt: '2021-02-16T13:52:48.000Z'
                        id_affectation: 1
                        id_type_element: null
                        id_state_type: 1
                        projet:
                          id_responsable: 1
                          id_client: null
                      - id: 134
                        nom: NRO-31-354
                        date_debut_p: null
                        date_fin_p: null
                        date_fin: null
                        date_debut: '2021-02-02T14:25:35.000Z'
                        updatedAt: '2021-02-02T14:25:35.000Z'
                        id_affectation: null
                        id_type_element: null
                        id_state_type: null
                        projet:
                          id_responsable: 3
                          id_client: 1
                      - id: 267
                        nom: NRO-31-354
                        date_debut_p: null
                        date_fin_p: null
                        date_fin: null
                        date_debut: '2021-02-02T14:27:07.000Z'
                        updatedAt: '2021-02-02T14:27:07.000Z'
                        id_affectation: null
                        id_type_element: null
                        id_state_type: null
                        projet:
                          id_responsable: 3
                          id_client: 1
                      - id: 400
                        nom: NRO-31-354
                        date_debut_p: null
                        date_fin_p: null
                        date_fin: null
                        date_debut: '2021-02-02T14:32:41.000Z'
                        updatedAt: '2021-02-02T14:32:41.000Z'
                        id_affectation: null
                        id_type_element: null
                        id_state_type: null
                        projet:
                          id_responsable: 3
                          id_client: 1
                      - id: 533
                        nom: NRO-31-354
                        date_debut_p: null
                        date_fin_p: null
                        date_fin: null
                        date_debut: '2021-02-04T10:50:28.000Z'
                        updatedAt: '2021-02-04T10:50:28.000Z'
                        id_affectation: null
                        id_type_element: null
                        id_state_type: null
                        projet:
                          id_responsable: 3
                          id_client: 3
                      - id: 666
                        nom: NRO-31-354
                        date_debut_p: null
                        date_fin_p: null
                        date_fin: null
                        date_debut: '2021-02-04T12:25:00.000Z'
                        updatedAt: '2021-02-04T12:25:00.000Z'
                        id_affectation: null
                        id_type_element: null
                        id_state_type: null
                        projet:
                          id_responsable: 3
                          id_client: 1
                      - id: 799
                        nom: NRO-31-354
                        date_debut_p: null
                        date_fin_p: null
                        date_fin: null
                        date_debut: '2021-02-04T12:27:13.000Z'
                        updatedAt: '2021-02-04T12:27:13.000Z'
                        id_affectation: null
                        id_type_element: null
                        id_state_type: null
                        projet:
                          id_responsable: 3
                          id_client: 1
                      - id: 932
                        nom: NRO-31-354
                        date_debut_p: null
                        date_fin_p: null
                        date_fin: null
                        date_debut: '2021-02-04T13:41:56.000Z'
                        updatedAt: '2021-02-04T13:41:56.000Z'
                        id_affectation: null
                        id_type_element: null
                        id_state_type: null
                        projet:
                          id_responsable: 7
                          id_client: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples: {}
      operationId: get-apiV0-findProjetsByResponsable
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/findProjetsByClient/:
    get:
      summary: find projets by client
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - id_element
                        - id_responsable
                        - id_client
                      properties:
                        id:
                          type: number
                        id_element:
                          type: number
                        id_responsable:
                          type: number
                        id_client:
                          type: number
                required:
                  - message
                  - data
              examples:
                Exemple:
                  value:
                    message: La liste des projets a bien été récupérée.
                    data:
                      - id: 2
                        id_element: 134
                        id_responsable: 3
                        id_client: 1
                      - id: 3
                        id_element: 267
                        id_responsable: 3
                        id_client: 1
                      - id: 4
                        id_element: 400
                        id_responsable: 3
                        id_client: 1
                      - id: 6
                        id_element: 666
                        id_responsable: 3
                        id_client: 1
                      - id: 7
                        id_element: 799
                        id_responsable: 3
                        id_client: 1
                      - id: 8
                        id_element: 932
                        id_responsable: 7
                        id_client: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      operationId: get-apiV0-findProjetsByClient
      description: ''
  /apiV0/findProjetsByPk:
    get:
      summary: find projet by pk
      tags: []
      responses: {}
      operationId: get-apiV0-findProjetsByPk
      deprecated: true
      description: ''
  '/apiV0/findResponsableByProjet/{id}':
    get:
      summary: Find responsable by projet
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                        minLength: 1
                      password:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                      etat:
                        type: string
                        minLength: 1
                      created:
                        type: string
                        minLength: 1
                      updatedAt:
                        type: string
                        minLength: 1
                      id_user_type:
                        type: number
                    required:
                      - id
                      - name
                      - password
                      - email
                      - etat
                      - created
                      - updatedAt
                      - id_user_type
                required:
                  - message
                  - data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      operationId: get-apiV0-findResponsableByProjet
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/register:
    put:
      summary: Register
      operationId: put-apiV0-register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      name:
                        type: string
                        minLength: 1
                      id_user_type:
                        type: number
                      password:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                      etat:
                        type: number
                      updatedAt:
                        type: string
                        minLength: 1
                      created:
                        type: string
                        minLength: 1
                    required:
                      - id
                      - name
                      - id_user_type
                      - password
                      - email
                      - etat
                      - updatedAt
                      - created
                required:
                  - message
                  - data
              examples:
                exemple:
                  value:
                    message: L'utilisateur Nom_Prenom a bien été crée.
                    data:
                      id: 9
                      name: Nom_Prenom
                      id_user_type: 2
                      password: $2b$10$BLdS4g44OwfBi.M15KFU1.ACd3TNOeSnxXUlZKozBgkVUv1N/DlIG
                      email: test89@mcgr.fr
                      etat: 1
                      updatedAt: '2021-02-16T14:45:53.493Z'
                      created: '2021-02-16T14:45:53.493Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                user_name:
                  type: string
                  minLength: 1
                email:
                  type: string
                  minLength: 1
                user_type:
                  type: number
                password:
                  type: string
                  minLength: 1
              required:
                - user_name
                - email
                - user_type
                - password
  /apiV0/lectureshp:
    get:
      summary: lecture shp
      tags: []
      responses: {}
      operationId: get-apiV0-lectureshp
      deprecated: true
  /apiV0/findAllStates:
    get:
      summary: Find all states
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - type
                        - created
                        - updatedAt
                      properties:
                        id:
                          type: number
                        type:
                          type: string
                          minLength: 1
                        created:
                          type: string
                          minLength: 1
                        updatedAt:
                          type: string
                          minLength: 1
                required:
                  - message
                  - data
              examples:
                Exemple:
                  value:
                    message: La liste des états a bien été récupérée.
                    data:
                      - id: 1
                        type: En cours
                        created: '2021-01-20T19:37:03.000Z'
                        updatedAt: '2021-01-20T19:37:03.000Z'
                      - id: 2
                        type: Refusé
                        created: '2021-01-20T19:37:03.000Z'
                        updatedAt: '2021-01-20T19:37:03.000Z'
                      - id: 3
                        type: terminé
                        created: '2021-01-20T19:37:03.000Z'
                        updatedAt: '2021-01-20T19:37:03.000Z'
      operationId: get-apiV0-findAllStates
  '/apiV0/findStateTypeByElement/{id}':
    get:
      summary: find state type by element
      tags: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - type
                        - created
                        - updatedAt
                      properties:
                        id:
                          type: number
                        type:
                          type: string
                          minLength: 1
                        created:
                          type: string
                          minLength: 1
                        updatedAt:
                          type: string
                          minLength: 1
                        elements:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            required:
                              - nom
                              - date_debut
                              - updatedAt
                              - id_affectation
                              - id_state_type
                            properties:
                              nom:
                                type: string
                                minLength: 1
                              date_debut_p: {}
                              date_fin_p: {}
                              date_fin: {}
                              date_debut:
                                type: string
                                minLength: 1
                              updatedAt:
                                type: string
                                minLength: 1
                              id_affectation:
                                type: number
                              id_type_element: {}
                              id_state_type:
                                type: number
                required:
                  - message
                  - data
              examples:
                Exemple:
                  value:
                    message: La liste des éléments a bien été récupérée.
                    data:
                      - id: 1
                        type: En cours
                        created: '2021-01-20T19:37:03.000Z'
                        updatedAt: '2021-01-20T19:37:03.000Z'
                        elements:
                          - nom: NRO-31-300
                            date_debut_p: null
                            date_fin_p: null
                            date_fin: null
                            date_debut: '2021-01-22T10:49:53.000Z'
                            updatedAt: '2021-02-16T13:52:48.000Z'
                            id_affectation: 1
                            id_type_element: null
                            id_state_type: 1
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      operationId: get-apiV0-findStateTypeByElement
      description: ''
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/deleteStep/:
    get:
      summary: Delete step
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
              examples:
                Exemple:
                  value:
                    message: La liste des steps a bien été récupérée.
                    data:
                      projet: 400
                      zone: 401
                      module: 413
                      tache: 431
                      step:
                        id: 483
                        nom: SRO
                        date_debut_p: null
                        date_fin_p: null
                        date_fin: null
                        date_debut: '2021-02-02T14:32:44.000Z'
                        updatedAt: '2021-02-02T14:32:44.000Z'
                        id_affectation: null
                        id_type_element: 6
                        id_state_type: null
                        step:
                          id_tache: 431
      operationId: get-apiV0-deleteStep
      deprecated: true
  '/apiV0/findAllStepsByPk/{id}':
    get:
      summary: Find all steps by pk
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      projet:
                        type: number
                      zone:
                        type: number
                      module:
                        type: number
                      tache:
                        type: number
                      step:
                        type: object
                        properties:
                          id:
                            type: number
                          nom:
                            type: string
                            minLength: 1
                          date_debut_p: {}
                          date_fin_p: {}
                          date_fin: {}
                          date_debut:
                            type: string
                            minLength: 1
                          updatedAt:
                            type: string
                            minLength: 1
                          id_affectation: {}
                          id_type_element:
                            type: number
                          id_state_type: {}
                          step:
                            type: object
                            properties:
                              id_tache:
                                type: number
                            required:
                              - id_tache
                        required:
                          - id
                          - nom
                          - date_debut
                          - updatedAt
                          - id_type_element
                          - step
                    required:
                      - projet
                      - zone
                      - module
                      - tache
                      - step
                required:
                  - message
                  - data
        '500':
          description: Internal Server Error
      operationId: get-apiV0-findAllStepsByPk
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/findStepsByTaches:
    get:
      summary: Find steps by tache
      tags: []
      responses: {}
      operationId: get-apiV0-findStepsByTaches
    parameters: []
  /apiV0/createTache:
    get:
      summary: createTache
      tags: []
      responses: {}
      operationId: get-apiV0-createTache
      deprecated: true
  /apiV0/deleteTache/:
    get:
      summary: Delete tache
      tags: []
      responses: {}
      operationId: get-apiV0-deleteTache
      deprecated: true
  /apiV0/findAllTacheByPk/:
    get:
      summary: find all taches by pk
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      projet:
                        type: number
                      zone:
                        type: number
                      module:
                        type: number
                      tache:
                        type: object
                        properties:
                          id:
                            type: number
                          nom:
                            type: string
                            minLength: 1
                          date_debut_p: {}
                          date_fin_p: {}
                          date_fin: {}
                          date_debut:
                            type: string
                            minLength: 1
                          updatedAt:
                            type: string
                            minLength: 1
                          id_affectation: {}
                          id_type_element:
                            type: number
                          id_state_type: {}
                          tache:
                            type: object
                            properties:
                              id_module:
                                type: number
                            required:
                              - id_module
                        required:
                          - id
                          - nom
                          - date_debut
                          - updatedAt
                          - id_type_element
                          - tache
                      steps:
                        type: array
                        items:
                          required: []
                          properties: {}
                    required:
                      - projet
                      - zone
                      - module
                      - tache
                      - steps
                required:
                  - message
                  - data
              examples:
                Exemple:
                  value:
                    message: La liste des module a bien été récupérée.
                    data:
                      projet: 932
                      zone: 944
                      module: 988
                      tache:
                        id: 1040
                        nom: depot
                        date_debut_p: null
                        date_fin_p: null
                        date_fin: null
                        date_debut: '2021-02-04T13:42:00.000Z'
                        updatedAt: '2021-02-04T13:42:00.000Z'
                        id_affectation: null
                        id_type_element: 11
                        id_state_type: null
                        tache:
                          id_module: 988
                      steps: []
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      operationId: get-apiV0-findAllTacheByPk
  /apiV0/findAllTemplates:
    get:
      summary: find all temlates
      tags: []
      responses: {}
      operationId: get-apiV0-findAllTemplates
      deprecated: true
  /apiV0/createProjet:
    get:
      summary: Create projet
      tags: []
      responses:
        '200':
          description: OK
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  element:
                    type: object
                    properties:
                      id:
                        type: number
                      nom:
                        type: string
                        minLength: 1
                      updatedAt:
                        type: string
                        minLength: 1
                      date_debut:
                        type: string
                        minLength: 1
                    required:
                      - id
                      - nom
                      - updatedAt
                      - date_debut
                  projet:
                    type: object
                    properties:
                      id:
                        type: number
                      id_responsable:
                        type: number
                      id_element:
                        type: number
                      id_client:
                        type: number
                    required:
                      - id
                      - id_responsable
                      - id_element
                      - id_client
                required:
                  - message
                  - element
                  - projet
      operationId: get-apiV0-createProjet
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                message:
                  type: string
                  minLength: 1
                data:
                  type: object
                  required:
                    - nom
                    - link
                    - id_template
                    - projet
                    - responsable
                    - client
                  properties:
                    nom:
                      type: string
                      minLength: 1
                    link:
                      type: string
                      minLength: 1
                      description: lien zip projet
                    id_template:
                      type: number
                    projet:
                      type: object
                      required:
                        - nom
                        - zones
                      properties:
                        nom:
                          type: string
                          minLength: 1
                        zones:
                          type: array
                          items:
                            type: object
                    responsable:
                      type: number
                    client:
                      type: number
              required:
                - message
                - data
  /upload:
    get:
      summary: Upload
      tags: []
      responses: {}
      operationId: get-upload
  /apiV0/uploadElements/:
    get:
      summary: Upload elements
      tags: []
      responses: {}
      operationId: get-apiv0-uploadElements
    parameters: []
  /apiV0/uploadProjet:
    get:
      summary: upload projet
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      nom:
                        type: string
                        minLength: 1
                      link:
                        type: string
                        minLength: 1
                      projet:
                        type: object
                        properties:
                          nom:
                            type: string
                            minLength: 1
                          zones:
                            type: array
                            items:
                              required: []
                              properties: {}
                        required:
                          - nom
                          - zones
                    required:
                      - nom
                      - link
                      - projet
                required:
                  - message
                  - data
              examples:
                Exemple:
                  value:
                    message: fichier envoyer avec succés
                    data:
                      nom: NRO-31-354.zip
                      link: ./uploads/2021-02/NRO-31-354.zip
                      projet:
                        nom: NRO-31-354
                        zones:
                          - SRO-31-165-356
                          - SRO-31-165-357
                          - SRO-31-165-358
                          - SRO-31-165-359
                          - SRO-31-165-360
                          - SRO-31-165-361
                          - SRO-31-165-362
                          - SRO-31-165-363
                          - SRO-31-165-364
                          - SRO-31-165-365
                          - SRO-31-165-395
                          - SRO-31-165-440
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
      operationId: get-apiV0-uploadProjet
      parameters: []
      requestBody:
        content:
          application/zip:
            schema:
              type: object
              properties: {}
  /apiV0/createUser:
    get:
      summary: Create projet
      tags: []
      responses: {}
      operationId: get-apiV0-createUser
      deprecated: true
  '/apiV0/deleteUser/{id}':
    get:
      summary: Delete user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-apiV0-deleteUser
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/findAllUsers:
    get:
      summary: Find all users
      tags: []
      responses: {}
      operationId: get-apiV0-findAllUsers
      deprecated: true
  '/apiV0/findTypeUserByPk/{id}':
    get:
      summary: Find type user by pk
      tags: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      type:
                        type: string
                        minLength: 1
                      created:
                        type: string
                        minLength: 1
                      updatedAt:
                        type: string
                        minLength: 1
                    required:
                      - id
                      - type
                      - created
                      - updatedAt
                required:
                  - message
                  - data
              examples:
                Exemple:
                  value:
                    message: string
                    data:
                      id: 0
                      type: string
                      created: string
                      updatedAt: string
      operationId: get-apiV0-findTypeUserByPk
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/findUserAssignementByElement/{id}':
    get:
      summary: Find user assignement by element
      tags: []
      responses: {}
      operationId: get-apiV0-findUserAssignementByElement
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/apiV0/findUsersByPk/{id}':
    get:
      summary: Find users by pk
      tags: []
      responses: {}
      operationId: get-apiV0-findUsersByPk
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/api/updateUser/{id}':
    get:
      summary: update user
      tags: []
      responses: {}
      operationId: get-api-updateUser
      deprecated: true
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiv0/updateEtatVersion:
    put:
      summary: update etat version
      operationId: put-apiv0-updateEtatVersion
      responses:
        '200':
          description: OK
      deprecated: true
      description: ''
  /apiv0/updateEtatVersionByElements/:
    put:
      summary: update etat version by element
      operationId: put-apiv0-updateEtatVersionByElements
      responses:
        '200':
          description: OK
      deprecated: true
  '/apiV0/findAllZoneByPk/{id}':
    get:
      summary: find all zone by pk
      tags: []
      responses: {}
      operationId: get-apiV0-findAllZoneByPk
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /apiV0/findAllZones:
    get:
      summary: Find all zones
      tags: []
      responses: {}
      operationId: get-apiV0-findAllZones
  '/apiV0/findZoneByProjet/{id}':
    get:
      summary: Find zone by projet
      tags: []
      responses: {}
      operationId: get-apiV0-findZoneByProjet
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
components:
  schemas:
    Client:
      title: Client
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        codeDepartement:
          type: number
      required:
        - name
        - codeDepartement
    Element:
      title: Element
      type: object
      description: ''
      properties:
        id:
          type: number
        nom:
          type: string
        date_debut_p:
          description: date début prévisionnelle
          type: number
        date_fin_p:
          type: number
          description: date fin prévisionnelle
        date_fin:
          type: number
      required:
        - nom
    File:
      title: File
      type: object
      properties:
        id:
          type: number
        type:
          type: string
        link:
          type: string
        link_source:
          type: string
          description: dossier source /uploads
    Log:
      title: Log
      type: object
      properties:
        id:
          type: number
        message:
          type: string
        date:
          type: number
      required:
        - message
        - date
    Module:
      title: Module
      type: object
      properties:
        id:
          type: number
    Projet:
      title: Projet
      type: object
      properties:
        id:
          type: number
    ProjetArchive:
      title: ProjetArchive
      type: object
      properties:
        id:
          type: number
        commentaire:
          type: string
    State_type:
      title: State_type
      type: object
      properties:
        id:
          type: number
        type:
          type: string
    Step:
      title: Step
      type: object
      properties:
        id:
          type: number
    Tache:
      title: Tache
      type: object
      properties:
        id:
          type: number
    Template:
      title: Template
      type: object
      properties:
        id:
          type: number
        nom:
          type: string
    Type_element:
      title: Type_element
      type: object
      properties:
        id:
          type: number
        nom:
          type: string
        element:
          type: string
    User_Type:
      title: User_Type
      type: object
      properties:
        id:
          type: string
    User:
      title: User
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        password:
          type: string
        email:
          type: string
        etat:
          type: boolean
    Version:
      title: Version
      type: object
      properties:
        id:
          type: number
        changement:
          type: string
        version:
          type: string
        etat:
          type: boolean
    Zone:
      title: Zone
      type: object
      properties:
        id:
          type: number
  securitySchemes:
    API Key - 1:
      type: http
      scheme: basic
